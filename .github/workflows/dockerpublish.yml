name: Docker Image CI

on:
    push:
        branches: helldar
        tags:
            - v*

jobs:
    buildx:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php_version: [ 7.3, 7.4 ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Prepare
                id: prepare
                env:
                    PHP_VERSION: ${{ matrix.php_version }}
                run: |
                    DOCKER_IMAGE=helldar/laradock-workspace
                    DOCKER_PLATFORMS=linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
                    VERSION=${PHP_VERSION}

                    if [[ $GITHUB_REF == refs/tags/* ]]; then
                        VERSION=${GITHUB_REF#refs/tags/v}
                    fi

                    TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
                    if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                        TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
                    fi

                    echo ::set-output name=docker_image::${DOCKER_IMAGE}
                    echo ::set-output name=version::${VERSION}
                    echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
                        --build-arg VERSION=${VERSION} \
                        --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
                        --build-arg VCS_REF=${GITHUB_SHA::8} \
                        ${TAGS} --file ./Dockerfile-${VERSION} ./
            -   name: Set up Docker Buildx
                uses: crazy-max/ghaction-docker-buildx@v3.3.0
            -   name: Docker Buildx (build)
                run: |
                    docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
            -   name: Login to DockerHub
                if: success()
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKER_HUB_USER }}
                    password: ${{ secrets.DOCKER_HUB_PASSWORD }}
            -   name: Docker Buildx (push)
                if: success()
                run: |
                    docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
            -   name: Inspect image
                if: always()
                run: |
                    docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
